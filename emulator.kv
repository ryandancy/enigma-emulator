#:kivy 1.9.1

<EmulatorGui>:
  gui: gui
  id: gui
  
  plugboard: plugboard
  rotor0: rotor0
  rotor1: rotor1
  rotor2: rotor2
  
  orientation: 'vertical'
  
  Label:
    text: 'Enigma Emulator'
    size_hint: (1, 0.1)
  RelativeLayout:
    Rotor:
      size_hint: (None, None)
      pos_hint: {'x': 0.1, 'y': 0.3}
      id: rotor0
    Rotor:
      size_hint: (None, None)
      pos_hint: {'x': 0.4, 'y': 0.3}
      id: rotor1
    Rotor:
      size_hint: (None, None)
      pos_hint: {'x': 0.7, 'y': 0.3}
      id: rotor2
    Plugboard:
      size_hint: (None, None)
      pos_hint: {'x': 0, 'y': 0}
      id: plugboard
  PlaintextLabel:
    id: plaintext
  CiphertextLabel:
    id: ciphertext
  BoxLayout:
    orientation: 'vertical'
    size_hint: (1, 0.05)
    ResetButton:
      id: reset_btn

<PlaintextLabel@Label>:
  size_hint: (1, 0.075)
  font_name: 'RobotoMono-Regular'
  text_size: self.size
  halign: 'left'
  text: 'plaintext: '

<CiphertextLabel@Label>:
  size_hint: (1, 0.075)
  font_name: 'RobotoMono-Regular'
  text_size: self.size
  halign: 'left'
  text: 'ciphertext: '

<ResetButton@Button>:
  size_hint: (0.1, 0.075)
  font_name: 'RobotoMono-Regular'
  text: 'Reset'
  text_size: self.size
  halign: 'center'
  on_press: self.parent.parent.reset()

<Plugboard>:
  size: 260, 50
  Label:
    id: pbA
    text: 'A'
    pos: 0 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbB
    text: 'B'
    pos: 10 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbC
    text: 'C'
    pos: 20 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbD
    text: 'D'
    pos: 30 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbE
    text: 'E'
    pos: 40 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbF
    text: 'F'
    pos: 50 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbG
    text: 'G'
    pos: 60 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbH
    text: 'H'
    pos: 70 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbI
    text: 'I'
    pos: 80 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbJ
    text: 'J'
    pos: 90 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbK
    text: 'K'
    pos: 100 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbL
    text: 'L'
    pos: 110 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbM
    text: 'M'
    pos: 120 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbN
    text: 'N'
    pos: 130 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbO
    text: 'O'
    pos: 140 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbP
    text: 'P'
    pos: 150 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbQ
    text: 'Q'
    pos: 160 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbR
    text: 'R'
    pos: 170 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbS
    text: 'S'
    pos: 180 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbT
    text: 'T'
    pos: 190 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbU
    text: 'U'
    pos: 200 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbV
    text: 'V'
    pos: 210 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbW
    text: 'W'
    pos: 220 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbX
    text: 'X'
    pos: 230 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbY
    text: 'Y'
    pos: 240 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbZ
    text: 'Z'
    pos: 250 + self.parent.pos[0], 45 + self.parent.pos[1]
    font_size: 10
  Label:
    id: pbA_btm
    text: 'A'
    pos: 0 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'A' else (1, 0, 0) if self.parent.char_out == 'A' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['A']].center_x, root.ids['pb' + root.swaps['A']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'A' else (1, 0, 0, 1) if self.parent.char_out == 'A' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbB_btm
    text: 'B'
    pos: 10 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'B' else (1, 0, 0) if self.parent.char_out == 'B' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['B']].center_x, root.ids['pb' + root.swaps['B']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'B' else (1, 0, 0, 1) if self.parent.char_out == 'B' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbC_btm
    text: 'C'
    pos: 20 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'C' else (1, 0, 0) if self.parent.char_out == 'C' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['C']].center_x, root.ids['pb' + root.swaps['C']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'C' else (1, 0, 0, 1) if self.parent.char_out == 'C' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbD_btm
    text: 'D'
    pos: 30 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'D' else (1, 0, 0) if self.parent.char_out == 'D' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['D']].center_x, root.ids['pb' + root.swaps['D']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'D' else (1, 0, 0, 1) if self.parent.char_out == 'D' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbE_btm
    text: 'E'
    pos: 40 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'E' else (1, 0, 0) if self.parent.char_out == 'E' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['E']].center_x, root.ids['pb' + root.swaps['E']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'E' else (1, 0, 0, 1) if self.parent.char_out == 'E' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbF_btm
    text: 'F'
    pos: 50 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'F' else (1, 0, 0) if self.parent.char_out == 'F' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['F']].center_x, root.ids['pb' + root.swaps['F']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'F' else (1, 0, 0, 1) if self.parent.char_out == 'F' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbG_btm
    text: 'G'
    pos: 60 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'G' else (1, 0, 0) if self.parent.char_out == 'G' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['G']].center_x, root.ids['pb' + root.swaps['G']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'G' else (1, 0, 0, 1) if self.parent.char_out == 'G' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbH_btm
    text: 'H'
    pos: 70 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'H' else (1, 0, 0) if self.parent.char_out == 'H' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['H']].center_x, root.ids['pb' + root.swaps['H']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'H' else (1, 0, 0, 1) if self.parent.char_out == 'H' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbI_btm
    text: 'I'
    pos: 80 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'I' else (1, 0, 0) if self.parent.char_out == 'I' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['I']].center_x, root.ids['pb' + root.swaps['I']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'I' else (1, 0, 0, 1) if self.parent.char_out == 'I' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbJ_btm
    text: 'J'
    pos: 90 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'J' else (1, 0, 0) if self.parent.char_out == 'J' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['J']].center_x, root.ids['pb' + root.swaps['J']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'J' else (1, 0, 0, 1) if self.parent.char_out == 'J' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbK_btm
    text: 'K'
    pos: 100 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'K' else (1, 0, 0) if self.parent.char_out == 'K' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['K']].center_x, root.ids['pb' + root.swaps['K']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'K' else (1, 0, 0, 1) if self.parent.char_out == 'K' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbL_btm
    text: 'L'
    pos: 110 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'L' else (1, 0, 0) if self.parent.char_out == 'L' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['L']].center_x, root.ids['pb' + root.swaps['L']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'L' else (1, 0, 0, 1) if self.parent.char_out == 'L' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbM_btm
    text: 'M'
    pos: 120 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'M' else (1, 0, 0) if self.parent.char_out == 'M' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['M']].center_x, root.ids['pb' + root.swaps['M']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'M' else (1, 0, 0, 1) if self.parent.char_out == 'M' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbN_btm
    text: 'N'
    pos: 130 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'N' else (1, 0, 0) if self.parent.char_out == 'N' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['N']].center_x, root.ids['pb' + root.swaps['N']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'N' else (1, 0, 0, 1) if self.parent.char_out == 'N' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbO_btm
    text: 'O'
    pos: 140 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'O' else (1, 0, 0) if self.parent.char_out == 'O' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['O']].center_x, root.ids['pb' + root.swaps['O']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'O' else (1, 0, 0, 1) if self.parent.char_out == 'O' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbP_btm
    text: 'P'
    pos: 150 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'P' else (1, 0, 0) if self.parent.char_out == 'P' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['P']].center_x, root.ids['pb' + root.swaps['P']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'P' else (1, 0, 0, 1) if self.parent.char_out == 'P' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbQ_btm
    text: 'Q'
    pos: 160 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'Q' else (1, 0, 0) if self.parent.char_out == 'Q' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['Q']].center_x, root.ids['pb' + root.swaps['Q']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'Q' else (1, 0, 0, 1) if self.parent.char_out == 'Q' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbR_btm
    text: 'R'
    pos: 170 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'R' else (1, 0, 0) if self.parent.char_out == 'R' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['R']].center_x, root.ids['pb' + root.swaps['R']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'R' else (1, 0, 0, 1) if self.parent.char_out == 'R' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbS_btm
    text: 'S'
    pos: 180 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'S' else (1, 0, 0) if self.parent.char_out == 'S' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['S']].center_x, root.ids['pb' + root.swaps['S']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'S' else (1, 0, 0, 1) if self.parent.char_out == 'S' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbT_btm
    text: 'T'
    pos: 190 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'T' else (1, 0, 0) if self.parent.char_out == 'T' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['T']].center_x, root.ids['pb' + root.swaps['T']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'T' else (1, 0, 0, 1) if self.parent.char_out == 'T' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbU_btm
    text: 'U'
    pos: 200 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'U' else (1, 0, 0) if self.parent.char_out == 'U' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['U']].center_x, root.ids['pb' + root.swaps['U']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'U' else (1, 0, 0, 1) if self.parent.char_out == 'U' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbV_btm
    text: 'V'
    pos: 210 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'V' else (1, 0, 0) if self.parent.char_out == 'V' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['V']].center_x, root.ids['pb' + root.swaps['V']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'V' else (1, 0, 0, 1) if self.parent.char_out == 'V' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbW_btm
    text: 'W'
    pos: 220 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'W' else (1, 0, 0) if self.parent.char_out == 'W' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['W']].center_x, root.ids['pb' + root.swaps['W']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'W' else (1, 0, 0, 1) if self.parent.char_out == 'W' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbX_btm
    text: 'X'
    pos: 230 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'X' else (1, 0, 0) if self.parent.char_out == 'X' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['X']].center_x, root.ids['pb' + root.swaps['X']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'X' else (1, 0, 0, 1) if self.parent.char_out == 'X' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbY_btm
    text: 'Y'
    pos: 240 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'Y' else (1, 0, 0) if self.parent.char_out == 'Y' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['Y']].center_x, root.ids['pb' + root.swaps['Y']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'Y' else (1, 0, 0, 1) if self.parent.char_out == 'Y' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]
  Label:
    id: pbZ_btm
    text: 'Z'
    pos: 250 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'Z' else (1, 0, 0) if self.parent.char_out == 'Z' else (1, 1, 1)
      Line:
        points: [self.center_x, self.center_y + 7, root.ids['pb' + root.swaps['Z']].center_x, root.ids['pb' + root.swaps['Z']].center_y - 7]
      Color:
        rgba: (0, 1, 0, 1) if self.parent.char_in == 'Z' else (1, 0, 0, 1) if self.parent.char_out == 'Z' else (0, 0, 0, 0)
      Triangle:
        points: [self.center_x, self.center_y - 6, self.center_x - 4, self.center_y - 12, self.center_x + 4, self.center_y - 12]
      Rectangle:
        pos: [self.center_x - 2, self.center_y - 16]
        size: [4, 6]

<Rotor>:
  size: 50, 260
  Label:
    id: rrA
    text: chr(self.parent.rotor_pos + ord('A'))
    pos: 40 + self.parent.pos[0], 250 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'A' else (1, 0, 0, 1) if self.parent.char_out == 'A' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrB
    text: chr((self.parent.rotor_pos + 1) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 240 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'B' else (1, 0, 0, 1) if self.parent.char_out == 'B' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrC
    text: chr((self.parent.rotor_pos + 2) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 230 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'C' else (1, 0, 0, 1) if self.parent.char_out == 'C' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrD
    text: chr((self.parent.rotor_pos + 3) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 220 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'D' else (1, 0, 0, 1) if self.parent.char_out == 'D' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrE
    text: chr((self.parent.rotor_pos + 4) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 210 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'E' else (1, 0, 0, 1) if self.parent.char_out == 'E' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrF
    text: chr((self.parent.rotor_pos + 5) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 200 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'F' else (1, 0, 0, 1) if self.parent.char_out == 'F' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrG
    text: chr((self.parent.rotor_pos + 6) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 190 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'G' else (1, 0, 0, 1) if self.parent.char_out == 'G' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrH
    text: chr((self.parent.rotor_pos + 7) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 180 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'H' else (1, 0, 0, 1) if self.parent.char_out == 'H' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrI
    text: chr((self.parent.rotor_pos + 8) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 170 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'I' else (1, 0, 0, 1) if self.parent.char_out == 'I' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrJ
    text: chr((self.parent.rotor_pos + 9) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 160 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'J' else (1, 0, 0, 1) if self.parent.char_out == 'J' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrK
    text: chr((self.parent.rotor_pos + 10) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 150 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'K' else (1, 0, 0, 1) if self.parent.char_out == 'K' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrL
    text: chr((self.parent.rotor_pos + 11) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 140 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'L' else (1, 0, 0, 1) if self.parent.char_out == 'L' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrM
    text: chr((self.parent.rotor_pos + 12) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 130 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'M' else (1, 0, 0, 1) if self.parent.char_out == 'M' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrN
    text: chr((self.parent.rotor_pos + 13) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 120 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'N' else (1, 0, 0, 1) if self.parent.char_out == 'N' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrO
    text: chr((self.parent.rotor_pos + 14) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 110 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'O' else (1, 0, 0, 1) if self.parent.char_out == 'O' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrP
    text: chr((self.parent.rotor_pos + 15) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 100 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'P' else (1, 0, 0, 1) if self.parent.char_out == 'P' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrQ
    text: chr((self.parent.rotor_pos + 16) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 90 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'Q' else (1, 0, 0, 1) if self.parent.char_out == 'Q' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrR
    text: chr((self.parent.rotor_pos + 17) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 80 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'R' else (1, 0, 0, 1) if self.parent.char_out == 'R' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrS
    text: chr((self.parent.rotor_pos + 18) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 70 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'S' else (1, 0, 0, 1) if self.parent.char_out == 'S' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrT
    text: chr((self.parent.rotor_pos + 19) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 60 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'T' else (1, 0, 0, 1) if self.parent.char_out == 'T' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrU
    text: chr((self.parent.rotor_pos + 20) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 50 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'U' else (1, 0, 0, 1) if self.parent.char_out == 'U' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrV
    text: chr((self.parent.rotor_pos + 21) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 40 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'V' else (1, 0, 0, 1) if self.parent.char_out == 'V' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrW
    text: chr((self.parent.rotor_pos + 22) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 30 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'W' else (1, 0, 0, 1) if self.parent.char_out == 'W' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrX
    text: chr((self.parent.rotor_pos + 23) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 20 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'X' else (1, 0, 0, 1) if self.parent.char_out == 'X' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrY
    text: chr((self.parent.rotor_pos + 24) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 10 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'Y' else (1, 0, 0, 1) if self.parent.char_out == 'Y' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rrZ
    text: chr((self.parent.rotor_pos + 25) % 26 + ord('A'))
    pos: 40 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgba: (0, 0, 0, 0) if self.parent.rotor_num == 2 else (0, 1, 0, 1) if self.parent.char_in == 'Z' else (1, 0, 0, 1) if self.parent.char_out == 'Z' else (0.3, 0.3, 0.3, 1)
      Line:
        points: [self.center_x + 7, self.center_y, self.center_x + 190, self.center_y]
  Label:
    id: rlA
    text: 'A'
    pos: 0 + self.parent.pos[0], 250 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'A' else (1, 0, 0) if self.parent.char_out == 'A' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['A']].center_x - 7, root.ids['rr' + root.cipher['A']].center_y]
  Label:
    id: rlB
    text: 'B'
    pos: 0 + self.parent.pos[0], 240 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'B' else (1, 0, 0) if self.parent.char_out == 'B' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['B']].center_x - 7, root.ids['rr' + root.cipher['B']].center_y]
  Label:
    id: rlC
    text: 'C'
    pos: 0 + self.parent.pos[0], 230 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'C' else (1, 0, 0) if self.parent.char_out == 'C' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['C']].center_x - 7, root.ids['rr' + root.cipher['C']].center_y]
  Label:
    id: rlD
    text: 'D'
    pos: 0 + self.parent.pos[0], 220 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'D' else (1, 0, 0) if self.parent.char_out == 'D' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['D']].center_x - 7, root.ids['rr' + root.cipher['D']].center_y]
  Label:
    id: rlE
    text: 'E'
    pos: 0 + self.parent.pos[0], 210 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'E' else (1, 0, 0) if self.parent.char_out == 'E' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['E']].center_x - 7, root.ids['rr' + root.cipher['E']].center_y]
  Label:
    id: rlF
    text: 'F'
    pos: 0 + self.parent.pos[0], 200 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'F' else (1, 0, 0) if self.parent.char_out == 'F' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['F']].center_x - 7, root.ids['rr' + root.cipher['F']].center_y]
  Label:
    id: rlG
    text: 'G'
    pos: 0 + self.parent.pos[0], 190 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'G' else (1, 0, 0) if self.parent.char_out == 'G' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['G']].center_x - 7, root.ids['rr' + root.cipher['G']].center_y]
  Label:
    id: rlH
    text: 'H'
    pos: 0 + self.parent.pos[0], 180 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'H' else (1, 0, 0) if self.parent.char_out == 'H' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['H']].center_x - 7, root.ids['rr' + root.cipher['H']].center_y]
  Label:
    id: rlI
    text: 'I'
    pos: 0 + self.parent.pos[0], 170 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'I' else (1, 0, 0) if self.parent.char_out == 'I' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['I']].center_x - 7, root.ids['rr' + root.cipher['I']].center_y]
  Label:
    id: rlJ
    text: 'J'
    pos: 0 + self.parent.pos[0], 160 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'J' else (1, 0, 0) if self.parent.char_out == 'J' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['J']].center_x - 7, root.ids['rr' + root.cipher['J']].center_y]
  Label:
    id: rlK
    text: 'K'
    pos: 0 + self.parent.pos[0], 150 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'K' else (1, 0, 0) if self.parent.char_out == 'K' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['K']].center_x - 7, root.ids['rr' + root.cipher['K']].center_y]
  Label:
    id: rlL
    text: 'L'
    pos: 0 + self.parent.pos[0], 140 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'L' else (1, 0, 0) if self.parent.char_out == 'L' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['L']].center_x - 7, root.ids['rr' + root.cipher['L']].center_y]
  Label:
    id: rlM
    text: 'M'
    pos: 0 + self.parent.pos[0], 130 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'M' else (1, 0, 0) if self.parent.char_out == 'M' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['M']].center_x - 7, root.ids['rr' + root.cipher['M']].center_y]
  Label:
    id: rlN
    text: 'N'
    pos: 0 + self.parent.pos[0], 120 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'N' else (1, 0, 0) if self.parent.char_out == 'N' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['N']].center_x - 7, root.ids['rr' + root.cipher['N']].center_y]
  Label:
    id: rlO
    text: 'O'
    pos: 0 + self.parent.pos[0], 110 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'O' else (1, 0, 0) if self.parent.char_out == 'O' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['O']].center_x - 7, root.ids['rr' + root.cipher['O']].center_y]
  Label:
    id: rlP
    text: 'P'
    pos: 0 + self.parent.pos[0], 100 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'P' else (1, 0, 0) if self.parent.char_out == 'P' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['P']].center_x - 7, root.ids['rr' + root.cipher['P']].center_y]
  Label:
    id: rlQ
    text: 'Q'
    pos: 0 + self.parent.pos[0], 90 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'Q' else (1, 0, 0) if self.parent.char_out == 'Q' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['Q']].center_x - 7, root.ids['rr' + root.cipher['Q']].center_y]
  Label:
    id: rlR
    text: 'R'
    pos: 0 + self.parent.pos[0], 80 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'R' else (1, 0, 0) if self.parent.char_out == 'R' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['R']].center_x - 7, root.ids['rr' + root.cipher['R']].center_y]
  Label:
    id: rlS
    text: 'S'
    pos: 0 + self.parent.pos[0], 70 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'S' else (1, 0, 0) if self.parent.char_out == 'S' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['S']].center_x - 7, root.ids['rr' + root.cipher['S']].center_y]
  Label:
    id: rlT
    text: 'T'
    pos: 0 + self.parent.pos[0], 60 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'T' else (1, 0, 0) if self.parent.char_out == 'T' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['T']].center_x - 7, root.ids['rr' + root.cipher['T']].center_y]
  Label:
    id: rlU
    text: 'U'
    pos: 0 + self.parent.pos[0], 50 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'U' else (1, 0, 0) if self.parent.char_out == 'U' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['U']].center_x - 7, root.ids['rr' + root.cipher['U']].center_y]
  Label:
    id: rlV
    text: 'V'
    pos: 0 + self.parent.pos[0], 40 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'V' else (1, 0, 0) if self.parent.char_out == 'V' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['V']].center_x - 7, root.ids['rr' + root.cipher['V']].center_y]
  Label:
    id: rlW
    text: 'W'
    pos: 0 + self.parent.pos[0], 30 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'W' else (1, 0, 0) if self.parent.char_out == 'W' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['W']].center_x - 7, root.ids['rr' + root.cipher['W']].center_y]
  Label:
    id: rlX
    text: 'X'
    pos: 0 + self.parent.pos[0], 20 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'X' else (1, 0, 0) if self.parent.char_out == 'X' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['X']].center_x - 7, root.ids['rr' + root.cipher['X']].center_y]
  Label:
    id: rlY
    text: 'Y'
    pos: 0 + self.parent.pos[0], 10 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'Y' else (1, 0, 0) if self.parent.char_out == 'Y' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['Y']].center_x - 7, root.ids['rr' + root.cipher['Y']].center_y]
  Label:
    id: rlZ
    text: 'Z'
    pos: 0 + self.parent.pos[0], 0 + self.parent.pos[1]
    font_size: 10
    canvas:
      Color:
        rgb: (0, 1, 0) if self.parent.char_in == 'Z' else (1, 0, 0) if self.parent.char_out == 'Z' else (0.3, 0.3, 0.3)
      Line:
        points: [self.center_x + 7, self.center_y, root.ids['rr' + root.cipher['Z']].center_x - 7, root.ids['rr' + root.cipher['Z']].center_y]